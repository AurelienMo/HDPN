security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    providers:
        database:
            entity:
                class: App\Entity\User
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        refresh:
            pattern:  ^/api/token/refresh
            stateless: true
            anonymous: true
        api_doc:
            pattern: ^/api/doc
            anonymous: true
        api_account_anonymously:
            pattern: ^/api/account/anon/create
            anonymous: true

        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: true


    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/doc, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/account/anon/create, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: ["POST"] }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
